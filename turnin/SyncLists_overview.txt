1
-

Team member 1 name: Adam Hopkins
Team member 1 eid: ajh2724

Team member 2 name: Mitch Stephan
Team member 2 eid: mjs4373

Team member 3 name: Ethan Poulter
Team member 3 eid: emp775

Instructions
============
To get started using the app, you first must create an account.
Launch the app and you will be taken to the login screen. There you can
enter an email and password and hit sign up (a fake email and password are fine).
Then you will be taken to the "Lists" screen. On the Lists screen you can see
all lists you have created. To start, there is an example list so you can see how it works.
You can click on the plus button in the action bar and an area will appear where you
can type the name of the new list (hit enter to add the list). If you decide you no longer want to create
that list, you can hit the red x button to cancel adding the list. If you click on a list name,
you will be taken to the Tasks screen which displays the task for that list. The format on the Tasks
screen is very similar to the Lists screen. In the action bar there is a plus button that you can click
to add a new task, and it is handled the same way as adding a list. In the top right corner on the action
bar, you can click the cog image to access the settings screen. On the settings screen, you can click
"Logout". This will log you out of SyncLists and take you to the login screen. Once on the login screen,
you can login with the account you created previously.

2
-

Completed Features
==================

- Users can sign up with email and password.

- Users can login with their email and password

- Users can add list

- Users can delete lists

- Users can undo deleting a list

- Users can add tasks for a specific list

- Users can complete tasks

- Users can delete tasks

- Users can undo deleting tasks

- After a user adds a task, a new spot is added to add the next task so that the user can
  create tasks quickly.

- Lists load from the SyncLists API when the Lists activity loads

- Tasks load from the SyncLists API when the Tasks activity loads

- Users can access settings page

- Users can logout via settings page

- Users can view instructions on how to use the app on the settings activity

- Users can toggle whether or not to allow sharing on the settings activity

- Users can choose how often SyncLists will sync with the server to check for updates to lists or tasks on the settings activity

- Users can change their password via the settings page

- Users can share lists with other users by email address.

- Users can view the email addresses of the people who the list have been shared with

- Users can unshare a list with an email

- Users can edit the name of a list

- Users can edit the name of a task

- Users can see who last updated a task and at what time

- An up button allows the user to go from the Tasks activity back to the Lists Activity.

3
-

Features From Application Prototype that were not Completed
===========================================================

- Caching lists and tasks locally when no internet connection is available

- Users cannot assign due dates to tasks and receive push notifications when the due dates approach

4
-

Features Added that were not Part of Prototype
==============================================

- Users can see who last edited a task and at what time

List of Classes and Major Chunks of Code from Other Sources
===========================================================

- ListArrayAdapter.java and TaskListAdapter.java were obtained (and modified) from:
        Title: Android Custom Listview
        Url: https://looksok.wordpress.com/tag/listview-item-with-button/

- onClickDeleteList() in ListsActivity.java uses a confirmation dialog that was obtained (and modified) from:
        Title: Alert Dialog Box or Confirmation Box in Android
        Url: http://www.androidhub4you.com/2012/09/alert-dialog-box-or-confirmation-box-in.html

List of Classes and Major Chunks of Code Completed by SyncLists Team Members
============================================================================

- An entire Web API was written in Python using the Django web framework. It allows all
users, lists, and tasks to be modified via a RESTful API. Also, it allows for other API calls
such as login.

- A lot of client side (Java) code was written to support, parse, and interface with the web API. The total list
of classes include:
    
    + SyncListsApi.java
    + SyncListsCreateListAsyncTask.java
    + SyncListsCreateTaskAsyncTask.java
    + SyncListsCreateUserAsyncTask.java
    + SyncListsDeleteListAsyncTask.java
    + SyncListsGetListsAsyncTask.java
    + SyncListsGetTasksAsyncTask.java
    + SyncListsLoginAsyncTask.java
    + SyncListsRequest.java
    + SyncListsRequestAsyncTask.java
    + SyncListsRequestAsyncTaskCallback.java
    + SyncListsRequestException.java
    + SyncListsResponse.java
    + SyncListsList.java
    + Task.java

- All activities for the SyncLists app were created by the members:

    + ListsActivity.java
    + SettingsActivity.java
    + TaskListActivity.java
    + SyncListsLogin.java

